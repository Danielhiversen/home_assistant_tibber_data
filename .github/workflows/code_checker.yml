name: Code checker

on:
  push:
  pull_request:

jobs:
  validate:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version:
          - "3.10"
    env:
      SRC_FOLDER: custom_components/tibber_data
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install depencency
        run: |
          pip install dlint flake8 flake8-deprecated flake8-executable isort pylint black mypy homeassistant
      - name: isort
        run: isort $SRC_FOLDER
      - name: Check for modified files
        id: git-check-isort
        run: git diff --quiet || echo "::set-output name=modified::true"
      - name: Push changes isort
        if: steps.git-check-isort.outputs.modified == 'true'
        run: |
            git config --global user.name 'Daniel Hoyer'
            git config --global user.email 'mail@dahoiv.net'
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
            git checkout $GITHUB_HEAD_REF
            git commit -am "fixup! Format Python code with isort"
            git push

      - name: black
        run: black $SRC_FOLDER
      - name: Check for modified files
        id: git-check
        run: git diff --quiet || echo "::set-output name=modified::true"
      - name: Push changes black
        if: steps.git-check.outputs.modified == 'true'
        run: |
            git config --global user.name 'Daniel Hoyer'
            git config --global user.email 'mail@dahoiv.net'
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
            git checkout $GITHUB_HEAD_REF
            git commit -am "fixup! Format Python code with black"
            git push

      - name: Flake8 Code Linter
        run: flakeheaven lint $SRC_FOLDER
      - name: Mypy Code Linter
        run: mypy $SRC_FOLDER
      - name: Pylint Code Linter
        run: pipenv run pylint $SRC_FOLDER

